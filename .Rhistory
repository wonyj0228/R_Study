# ggmap 설치, ggplot2, ggmap을 import
install.packages('ggmap')
library(ggplot2)
library(ggmap)
# R에서는 c함수 라는 것을 사용해서 데이터를 묶어준다
# c 함수를 이용해서 서울의 지도를 가지고 온다.
seoul <- c(left=126.77, bottom=37.40, right=127.17, top=37.70)
map <- get_stamenmap(seoul, zoom=12, maptype = "terrain")
ggmap(map)
######## ass find modify! #########
pop <- read.csv(file.choose(), header = T)
pop
library(readr)
population201902 <- read_csv("r01/population201902.csv")
View(population201902)
######## ass find modify! #########
#pop <- read.csv(file.choose(), header = T)
pop <- read.csv("population201902.csv")
pop
######## ass find modify! #########
#pop <- read.csv(file.choose(), header = T)
pop <- read.csv("population201902.csv")
pop
######## ass find modify! #########
#pop <- read.csv(file.choose(), header = T)
pop <- read.csv("population201902.csv")
pop
######## ass find modify! #########
#pop <- read.csv(file.choose(), header = T)
pop <- read.csv("population2019022.csv")
pop
#replace 기능을 하는 함수들을 가져오는 라이브러리
library(stringr)
######## ass find modify! #########
#pop <- read.csv(file.choose(), header = T)
pop <- read.csv("population201902.csv")
pop
pop_all <- pop$총인구수
pop_all
region <- pop$지역명
region <- pop$지역명
region
lon <- pop$LON
lat <- pop$LAT
# 총인구수의 쉼표를 공백으로 바꿔라
# numeric 숫자로 바꿔주는 것
tot_pop <- as.numeric(str_replace_all(pop$총인구수,',',''))
df <- data.frame(region, lon, lat, tot_pop)
df
df[1]
df[2]
df[1:17]
df[1:17,]
df[1:5,]
daegu <- c(left = 123.44, bottom=32.85, right=131.60, top=38.85)
map <- get_stamenmap(daeggu, zoom=7,maptype = 'watercolor')
map <- get_stamenmap(daegu, zoom=7,maptype = 'watercolor')
(ggmap)
library(ggmap)
ggmap(map)
layer1 <- ggmap(map)
layer1
layer2<- layer1 + geom_point(
data=df,
aes(x=lon,y=lat,color=factor(tot_pop), size=3) #총 인구수를 가지고 색깔을 결정
)
layer2
######## ass find modify! #########
#pop <- read.csv(file.choose(), header = T)
pop <- read.csv("population201902212.csv")
######## ass find modify! #########
#pop <- read.csv(file.choose(), header = T)
pop <- read.csv("population201902212.csv")
######## ass find modify! #########
#pop <- read.csv(file.choose(), header = T)
pop <- read.csv("population201902212.csv")
pop
#replace 기능을 하는 함수들을 가져오는 라이브러리
library(stringr)
pop_all <- pop$총인구수
pop_all
region <- pop$지역명
region
lon <- pop$LON
lat <- pop$LAT
# 총인구수의 쉼표를 공백으로 바꿔라
# numeric 숫자로 바꿔주는 것
tot_pop <- as.numeric(str_replace_all(pop$총인구수,',',''))
df <- data.frame(region, lon, lat, tot_pop)
df
df <- data.frame(region, lon, lat, tot_pop)
df
# 총인구수의 쉼표를 공백으로 바꿔라
# numeric 숫자로 바꿔주는 것
tot_pop <- as.numeric(str_replace_all(pop$LON,',',''))
top_pop
tot_pop
df <- data.frame(region, lon, lat, tot_pop)
df
######## ass find modify! #########
#pop <- read.csv(file.choose(), header = T)
pop <- read.csv("population201902212.csv")
pop
pop <- read.csv("population201902212.csv")
pop
#replace 기능을 하는 함수들을 가져오는 라이브러리
library(stringr)
pop_all <- pop$총인구수
pop_all
region <- pop$지역명
region
lon <- pop$LON
lat <- pop$LAT
# 총인구수의 쉼표를 공백으로 바꿔라
# numeric 숫자로 바꿔주는 것
tot_pop <- as.numeric(str_replace_all(pop$총인구수,',',''))
df <- data.frame(region, lon, lat, tot_pop)
df
# 인덱스가 1부터 시작한다!!!!  R!!!!!
df[1] # 컬럼을 가지고 온다.
df[2]
df[1:17,] # 행으로 인식한다
df[1:5,]
daegu <- c(left = 123.44, bottom=32.85, right=131.60, top=38.85)
map <- get_stamenmap(daegu, zoom=7,maptype = 'watercolor')
ggmap(map)
layer1 <- ggmap(map)
layer2<- layer1 + geom_point(
data=df,
aes(x=lon,y=lat,color=factor(tot_pop), size=3) #총 인구수를 가지고 색깔을 결정
)
layer2<- layer1 + geom_point(
data=df,
aes(x=lon,y=lat,color=factor(tot_pop), size=3) #총 인구수를 가지고 색깔을 결정
)
layer2
